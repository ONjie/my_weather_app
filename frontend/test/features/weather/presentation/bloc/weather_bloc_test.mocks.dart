// Mocks generated by Mockito 5.4.5 from annotations
// in weather_app/test/features/weather/presentation/bloc/weather_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:either_dart/either.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:weather_app/core/failures/failures.dart' as _i6;
import 'package:weather_app/features/weather/domain/entities/location_current_weather_entity.dart'
    as _i10;
import 'package:weather_app/features/weather/domain/entities/weather_forecast_entity.dart'
    as _i7;
import 'package:weather_app/features/weather/domain/repositories/weather_repository.dart'
    as _i2;
import 'package:weather_app/features/weather/domain/use_cases/fetch_locations_weather_data.dart'
    as _i9;
import 'package:weather_app/features/weather/domain/use_cases/fetch_weather_forecast_data.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeatherRepository_0 extends _i1.SmartFake
    implements _i2.WeatherRepository {
  _FakeWeatherRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FetchWeatherForecast].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchWeatherForecast extends _i1.Mock
    implements _i3.FetchWeatherForecast {
  @override
  _i2.WeatherRepository get weatherRepository =>
      (super.noSuchMethod(
            Invocation.getter(#weatherRepository),
            returnValue: _FakeWeatherRepository_0(
              this,
              Invocation.getter(#weatherRepository),
            ),
            returnValueForMissingStub: _FakeWeatherRepository_0(
              this,
              Invocation.getter(#weatherRepository),
            ),
          )
          as _i2.WeatherRepository);

  @override
  _i4.Future<_i5.Either<_i6.Failure, _i7.WeatherForecastEntity>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue: _i4.Future<
              _i5.Either<_i6.Failure, _i7.WeatherForecastEntity>
            >.value(
              _i8.dummyValue<
                _i5.Either<_i6.Failure, _i7.WeatherForecastEntity>
              >(this, Invocation.method(#execute, [])),
            ),
            returnValueForMissingStub: _i4.Future<
              _i5.Either<_i6.Failure, _i7.WeatherForecastEntity>
            >.value(
              _i8.dummyValue<
                _i5.Either<_i6.Failure, _i7.WeatherForecastEntity>
              >(this, Invocation.method(#execute, [])),
            ),
          )
          as _i4.Future<_i5.Either<_i6.Failure, _i7.WeatherForecastEntity>>);
}

/// A class which mocks [FetchLocationsCurrentWeather].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchLocationsCurrentWeather extends _i1.Mock
    implements _i9.FetchLocationsCurrentWeather {
  @override
  _i2.WeatherRepository get weatherRepository =>
      (super.noSuchMethod(
            Invocation.getter(#weatherRepository),
            returnValue: _FakeWeatherRepository_0(
              this,
              Invocation.getter(#weatherRepository),
            ),
            returnValueForMissingStub: _FakeWeatherRepository_0(
              this,
              Invocation.getter(#weatherRepository),
            ),
          )
          as _i2.WeatherRepository);

  @override
  _i4.Future<_i5.Either<_i6.Failure, List<_i10.LocationCurrentWeatherEntity>>>
  execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue: _i4.Future<
              _i5.Either<_i6.Failure, List<_i10.LocationCurrentWeatherEntity>>
            >.value(
              _i8.dummyValue<
                _i5.Either<_i6.Failure, List<_i10.LocationCurrentWeatherEntity>>
              >(this, Invocation.method(#execute, [])),
            ),
            returnValueForMissingStub: _i4.Future<
              _i5.Either<_i6.Failure, List<_i10.LocationCurrentWeatherEntity>>
            >.value(
              _i8.dummyValue<
                _i5.Either<_i6.Failure, List<_i10.LocationCurrentWeatherEntity>>
              >(this, Invocation.method(#execute, [])),
            ),
          )
          as _i4.Future<
            _i5.Either<_i6.Failure, List<_i10.LocationCurrentWeatherEntity>>
          >);
}
